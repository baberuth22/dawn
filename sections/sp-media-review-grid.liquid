{% comment %}
  Â© Sections Pro. You are free to use this section in your store. You may not redistribute this section in another Shopify app.
{% endcomment %}
<style>

  @keyframes slpProgressBar {
    0% { width: 0; }
    100% { width: 100%; }
  }

  {% if section.settings.override_fonts %}
  {{ section.settings.text_font | font_face }}
  {{ section.settings.headline_font | font_face }}
  {% endif %}

  #sp-mr-{{ section.id }}.sp-mr-wrap p,
  #sp-mr-{{ section.id }}.sp-mr-wrap p a {
    font-size: {{ section.settings.text_size }}px;
    {% if section.settings.override_fonts %}
    font-family: {{ section.settings.text_font.family }}, {{ section.settings.text_font.fallback_families }};
    font-weight: {{ section.settings.text_font.weight }};
    {% endif %}
    {% if section.settings.text_line_height != 'inherit' %}line-height: {{ section.settings.text_line_height }};{% endif %}
    
  }

  #sp-mr-{{ section.id }}.sp-mr-wrap h2 {
    font-size: {{ section.settings.headline_size }}px;
    {% if section.settings.override_fonts %}
    font-family: {{ section.settings.headline_font.family }}, {{ section.settings.headline_font.fallback_families }};
    font-weight: {{ section.settings.headline_font.weight }};
    {% endif %}
    {% if section.settings.headline_line_height != 'inherit' %}line-height: {{ section.settings.headline_line_height }};{% endif %}
  }
  
  #sp-mr-{{ section.id }}.sp-mr-wrap {
    background-image: {{ section.settings.background_color }};
    width: 100%;
  }
  
  #sp-mr-{{ section.id }} .sp-mr {
    position: relative;
    margin: 0 auto;
    max-width: {{ section.settings.max_width }}px;
    padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;
  }

  #sp-mr-{{ section.id }} .sp-mr .sp-mr-grid {
    display: grid;
    gap: {{ section.settings.grid_gap }}px;
    position: relative;
    width: 100%;
    z-index: 2;
  }

  @media only screen and (min-width: 801px) {
    #sp-mr-{{ section.id }} .sp-mr .sp-mr-grid {
      display: grid;
      grid-auto-columns: 1fr;
      grid-auto-flow: column;
      
    }
  }

  @media only screen and (max-width: 800px) {
    {% if section.settings.mobile_display == 'slideshow' %}
    #sp-mr-{{ section.id }} .sp-mr .sp-mr-grid {
      display: grid;
      grid-auto-columns: 100%;
      grid-auto-flow: column;
      width: 100%;
      overflow-x: scroll;
      scroll-snap-type: x mandatory;
    }

    #sp-mr-{{ section.id }} .sp-mr .sp-mr-grid::-webkit-scrollbar { 
      display: none;  /* Safari and Chrome */
    }

    #sp-mr-{{ section.id }} .sp-mr-col {
      scroll-snap-align: start;
    }

    {% else %}
      #sp-mr-{{ section.id }} .sp-mr .sp-mr-grid {
        display: grid;
        grid-template-columns: {{ section.settings.mobile_columns }};
      }
    {% endif %}
  }

  #sp-mr-{{ section.id }} .sp-mr-col {
    box-sizing: border-box;
    position: relative;
    margin: 0;
    padding: 0 0 15px 0;
    overflow: hidden;
    border-radius: {{ section.settings.media_radius }}px;
    {% if section.settings.media_shadow %}
      box-shadow: 0 0 5px 0 rgba(0,0,0,0.20);
      margin: 5px;
    {% endif %}
    transition: .25s all ease;
    background-image: {{ section.settings.review_background_color }};
  }

  #sp-mr-{{ section.id }} .sp-mr-col:hover {
    transform: scale(1.01);   
  }
  
  #sp-mr-{{ section.id }} .sp-mr-col img,
  #sp-mr-{{ section.id }} .sp-mr-col video {
    width: 100%;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    object-fit: cover;
    aspect-ratio: {{ section.settings.media_aspect_ratio }};
  }

  #sp-mr-{{ section.id }} .sp-mr-col svg.sp-mr-stars, 
  #sp-mr-{{ section.id }} .sp-mr-col svg.sp-mr-stars g {
      fill: {{ section.settings.highlight_color }};
  }

  #sp-mr-{{ section.id }} .sp-mr-col h2 {
    margin: 0;
    text-align: left;
    color: {{section.settings.headline_color}};
    padding: 10px 15px 0 15px;
  }
  
  #sp-mr-{{ section.id }} .sp-mr-col p {
    margin: 0;
    text-align: left;
    color: {{section.settings.text_color}};
    padding: 10px 15px 0 15px;
  }

  #sp-mr-{{ section.id }} .sp-mr-col p small {
    font-size: 12px;
    color: {{section.settings.text_color}};
  }

{% if section.settings.mobile_display == 'slideshow' %}
  /* snap links */
  #sp-mr-{{ section.id }} .sp-snap-links {
    padding: 0;
  }

  #sp-mr-snap-links-{{ section.id }} a {
      display: inline-block;
      background-color: {{ section.settings.indicator_color }};
      width: 12px;
      height: 12px;
      border-radius: 50%;
      text-indent: -9999px;
      padding: 0;
      margin: 0 2.5px; 
      cursor: pointer;
      opacity: 0.25;
  }

  #sp-mr-snap-links-{{ section.id }} a[active] {
      background-color: {{ section.settings.indicator_color }};
      opacity: 1;
  }

  #sp-mr-{{ section.id }}[autoplaying] #sp-mr-snap-links-{{ section.id }} a[active] {
      background: {{ section.settings.progress_background_color }};
      opacity: 1;
      width: 25px;
      transition: all .5s;
      border-radius: 10px;
      overflow: hidden;
  }

  #sp-mr-{{ section.id }}[autoplaying] #sp-mr-snap-links-{{ section.id }} a[active]>span {
    display: block;
    background: {{ section.settings.progress_foreground_color }};
    height: 100%;
    animation: slpProgressBar {{ section.settings.autoplay_time }}ms ease-in-out;
    animation-fill-mode: both;
  }

  #sp-mr-{{ section.id }} a.sp-mr-cta {
    display: inline-block;
    padding: {{ section.settings.button_padding_tb }}px {{ section.settings.button_padding_lr }}px;
    background-image: {{section.settings.button_background_color}};
    border-radius: {{ section.settings.button_border_radius }}px;
    color: {{section.settings.button_text_color}};
    text-decoration: none;
    cursor: pointer;
    text-shadow: none;
    transition: .25s all;
  }


  #sp-mr-snap-links-{{ section.id }} {
    display: none;
  }

  @media only screen and (max-width: 800px) {

    #sp-mr-snap-links-{{ section.id }} {
      display: block;
      text-align: center;
    }

  }
{% endif %}
</style>

<div id="sp-mr-{{ section.id }}" class="sp-mr-wrap" sp-wrap>

<div class="sp-mr" sp-container>

  <div id="sp-mr-carousel-{{ section.id }}" class="sp-mr-grid">

    {% for block in section.blocks %}
      <div class="sp-mr-col" data-index="{{ forloop.index | minus: 1 }}" sp-column>

        {% if block.type == 'video' %}
          
          <div class="sp-video-container">
            {{
              block.settings.video
              | video_tag:
                image_size: '1100x',
                playsinline: block.settings.video_inline,
                autoplay: block.settings.video_autoplay,
                loop: block.settings.video_loop,
                controls: block.settings.video_controls,
                muted: block.settings.video_muted
            }}
          </div>
        
        {% endif %}
        {% if block.type == 'image' %}
            {% if block.settings.image %}
            <img loading="lazy"
              src="{{ block.settings.image | image_url: width: 600 }}"
              srcset="{{ block.settings.image| image_url: width: 600 }} 600w,
                {{ block.settings.image | image_url: width: 800 }} 800w,
                {{ block.settings.image | image_url: width: 1000 }} 1000w,
                {{ block.settings.image | image_url: width: 1100 }} 1100w">
            {% else %}
              <img src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg version='1.1' viewBox='0 0 500 500' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Crect x='2' y='2' width='496' height='496' fill='%23D8D8D8' stroke='%23D8D8D8' stroke-width='4'/%3E%3C/g%3E%3C/svg%3E">
            {% endif %}
        {% endif %}
        
          <h2>{{ block.settings.cite }}</h2>
          <p style="line-height:1;">
<svg class="sp-mr-stars" width="101px" height="20px" viewBox="0 0 101 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Group 5</title>
    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
      
        <g id="Group-5">
            <polygon points="10 15 4.12214748 18.0901699 5.24471742 11.545085 0.489434837 6.90983006 7.06107374 5.95491503 10 0 12.9389263 5.95491503 19.5105652 6.90983006 14.7552826 11.545085 15.8778525 18.0901699"></polygon>
            <polygon points="30.5 15 24.6221475 18.0901699 25.7447174 11.545085 20.9894348 6.90983006 27.5610737 5.95491503 30.5 0 33.4389263 5.95491503 40.0105652 6.90983006 35.2552826 11.545085 36.3778525 18.0901699"></polygon>
            <polygon points="50 15 44.1221475 18.0901699 45.2447174 11.545085 40.4894348 6.90983006 47.0610737 5.95491503 50 0 52.9389263 5.95491503 59.5105652 6.90983006 54.7552826 11.545085 55.8778525 18.0901699"></polygon>
            <polygon points="70.5 15 64.6221475 18.0901699 65.7447174 11.545085 60.9894348 6.90983006 67.5610737 5.95491503 70.5 0 73.4389263 5.95491503 80.0105652 6.90983006 75.2552826 11.545085 76.3778525 18.0901699"></polygon>
            <polygon points="90.5 15 84.6221475 18.0901699 85.7447174 11.545085 80.9894348 6.90983006 87.5610737 5.95491503 90.5 0 93.4389263 5.95491503 100.010565 6.90983006 95.2552826 11.545085 96.3778525 18.0901699"></polygon>
        </g>
    </g>
</svg></p>
        
        <p>{{ block.settings.quote }}</p>

        {% if block.settings.cta != '' %}<p><a class="sp-mr-cta" href="{{ block.settings.cta_link }}">{{ block.settings.cta }}</a></p>{% endif %}
          

      </div>
      <!-- /.sp-mr-col -->

      {% endfor %}

  </div>
  <!-- /.sp-mr-grid -->

  <div id="sp-mr-snap-links-{{ section.id }}" class="sp-snap-links">
    {% for block in section.blocks %}
      <a data-index="{{ forloop.index | minus: 1 }}"><span></span></a>
    {% endfor %}
  </div>
  
</div>
<!-- /.sp-mr -->

</div>
<!-- /.sp-mr-wrap -->

{% if section.settings.big_play_pause_button %}
  <!-- play/pause js -->
  <style>
    #sp-mr-{{ section.id }} .sp-video-container {
      position: relative;
      cursor: pointer;
    }
  
    #sp-mr-{{ section.id }} .sp-video-container svg.sp-play-button,
    #sp-mr-{{ section.id }} .sp-video-container svg.sp-pause-button {
      position: absolute;
      top: calc(50% - 45px);
      left: calc(50% - 45px);
      transition: all .5s;
      visibility: hidden;
      opacity: 0;
      pointer-events: none;
      filter: drop-shadow(1px 1px 2px rgba(0, 0, 0, 0.25));
    }
  
    #sp-mr-{{ section.id }} .sp-video-container svg.sp-play-button *,
    #sp-mr-{{ section.id }} .sp-video-container svg.sp-pause-button * {
      pointer-events: none;
    }
  
    #sp-mr-{{ section.id }} .sp-video-container[data-state="paused"] svg.sp-play-button {
      visibility: visible;
      opacity: 0.8;
      opacity: .9;
    }  
  
    #sp-mr-{{ section.id }} .sp-video-container[data-state="playing"]:hover svg.sp-pause-button {
      visibility: visible;
      opacity: 0.8;
    }
  </style>
  <script>
  
    var sp_play_button = `
    <svg class="sp-play-button" width="90px" height="90px" viewBox="0 0 90 90" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
            <g id="media-grid" transform="translate(-325, -205)" fill="#FFFFFF" fill-rule="nonzero">
                <g transform="translate(40, 145)">
                    <g transform="translate(230, 0)">
                        <path d="M99.5,60 C105.655833,60 111.440833,61.168125 116.855,63.504375 C122.269167,65.840625 126.97875,69.01125 130.98375,73.01625 C134.98875,77.02125 138.159375,81.7308333 140.495625,87.145 C142.831875,92.5591667 144,98.3441667 144,104.5 C144,110.655833 142.831875,116.440833 140.495625,121.855 C138.159375,127.269167 134.98875,131.97875 130.98375,135.98375 C126.97875,139.98875 122.269167,143.159375 116.855,145.495625 C111.440833,147.831875 105.655833,149 99.5,149 C93.3441667,149 87.5591667,147.831875 82.145,145.495625 C76.7308333,143.159375 72.02125,139.98875 68.01625,135.98375 C64.01125,131.97875 60.840625,127.269167 58.504375,121.855 C56.168125,116.440833 55,110.655833 55,104.5 C55,98.3441667 56.168125,92.5591667 58.504375,87.145 C60.840625,81.7308333 64.01125,77.02125 68.01625,73.01625 C72.02125,69.01125 76.7308333,65.840625 82.145,63.504375 C87.5591667,61.168125 93.3441667,60 99.5,60 Z M90,85 L90,125 L121,105 L90,85 Z" id="Shape"></path>
                    </g>
                </g>
            </g>
        </g>
    </svg>`;
  
    var sp_pause_button = `
  <svg class="sp-pause-button" width="90px" height="90px" viewBox="0 0 90 90" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
      <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
          <g id="media-grid" transform="translate(-402, -205)" fill="#FFFFFF">
              <g id="Group-21" transform="translate(40, 145)">
                  <g id="Group-20" transform="translate(230, 0)">
                      <path d="M176.5,60 C182.655833,60 188.440833,61.168125 193.855,63.504375 C199.269167,65.840625 203.97875,69.01125 207.98375,73.01625 C211.98875,77.02125 215.159375,81.7308333 217.495625,87.145 C219.831875,92.5591667 221,98.3441667 221,104.5 C221,110.655833 219.831875,116.440833 217.495625,121.855 C215.159375,127.269167 211.98875,131.97875 207.98375,135.98375 C203.97875,139.98875 199.269167,143.159375 193.855,145.495625 C188.440833,147.831875 182.655833,149 176.5,149 C170.344167,149 164.559167,147.831875 159.145,145.495625 C153.730833,143.159375 149.02125,139.98875 145.01625,135.98375 C141.01125,131.97875 137.840625,127.269167 135.504375,121.855 C133.168125,116.440833 132,110.655833 132,104.5 C132,98.3441667 133.168125,92.5591667 135.504375,87.145 C137.840625,81.7308333 141.01125,77.02125 145.01625,73.01625 C149.02125,69.01125 153.730833,65.840625 159.145,63.504375 C164.559167,61.168125 170.344167,60 176.5,60 Z M167.073333,88 C164.823693,88 163,89.8236935 163,92.0733333 L163,119.926667 C163,122.176307 164.823693,124 167.073333,124 C169.322973,124 171.146667,122.176307 171.146667,119.926667 L171.146667,92.0733333 C171.146667,89.8236935 169.322973,88 167.073333,88 Z M185.873333,88 C183.623693,88 181.8,89.8236935 181.8,92.0733333 L181.8,119.926667 C181.8,122.176307 183.623693,124 185.873333,124 C188.122973,124 189.946667,122.176307 189.946667,119.926667 L189.946667,92.0733333 C189.946667,89.8236935 188.122973,88 185.873333,88 Z" id="Combined-Shape"></path>
                  </g>
              </g>
          </g>
      </g>
  </svg>`;
  
    var sp_video_containers = document.querySelectorAll(`#sp-mr-{{ section.id }} .sp-video-container`);
  
    for(var x=0; x<sp_video_containers.length; x++) {
      sp_video_containers[x].innerHTML += sp_play_button;
      sp_video_containers[x].innerHTML += sp_pause_button;
    }
  
    var sp_videos = document.querySelectorAll(`#sp-mr-{{ section.id }} .sp-video-container video`);
  
    for(var x=0; x<sp_videos.length; x++) {
  
      sp_videos[x].parentNode.setAttribute('data-state', 'paused'); 
  
      if(sp_videos[x].hasAttribute('autoplay')) {
          sp_videos[x].parentNode.setAttribute('data-state', 'playing');
      }
      else {
          sp_videos[x].parentNode.setAttribute('data-state', 'paused');
        
      }
      
      sp_videos[x].addEventListener('click', (e) => {
  
        if (e.target.paused) {
          e.target.play();
          e.target.parentNode.setAttribute('data-state', 'playing');
        }
        else { 
          e.target.pause();
          e.target.parentNode.setAttribute('data-state', 'paused');    
        }  
      });
      
    }
  </script>
{% endif %}

{% if section.settings.mobile_display == 'slideshow' %}
  <script>
  
    // mobile only
    if(screen.width <= 800 ) {
  
      // create new Sections Pro slideshow
      class SpSlideShow_{{ short_id }} {
  
        constructor(section, carousel, enable_autoplay, autoplay_time, slides, links) {
  
          console.log(`[spslideshow] setup`);      
  
          this.section = section;
          this.carousel = carousel;
          this.slides = slides;
          this.links = links;
          this.index = 0;
          this.interval = null;
          this.observer = null;
          this.direction = 'up';
          this.autoplay_time = autoplay_time;
          this.autoplay_is_setup = false;
  
          // enable autoplay
          if(enable_autoplay) {
            console.log(`[spslideshow] enable auotplay`);  
            this.setupAutoplayObserver();
            this.setupClearEvents();
          }
  
          // setup links and observer
          this.setupLinks();
          this.setupObserver();
        }
  
        // don't start autoplay until the slideshow is visible
        setupAutoplayObserver() {
          var context = this;
  
          // use intersection observer to render dots
          this.observer = new IntersectionObserver(function(entries, observer) {
  
            // Loop over the entries
            entries.forEach(entry => {
              // If the element is visible
              if (entry.isIntersecting) {
                if(context.autoplay_is_setup == false) {
                  context.setupAutoplay();
                  context.autoplay_is_setup = true;
                }
              }
            });
  
          }, {
            threshold: 0.5
          });
  
          for (var i = 0; i < this.slides.length; i++) {
            this.observer.observe(this.carousel);
          }
        }
  
        // setup autoplay
        setupAutoplay() {
  
          var autoplay_time = this.autoplay_time;
  
          console.log(`[spslideshow] setup autoplay time = ${autoplay_time}`);  
  
          var context = this;
          context.section.setAttribute('autoplaying', '');
  
          this.interval = setInterval(function() {
  
            // handle next
            if(context.direction == 'up') context.index++;
            else context.index--;
  
            // rewind
            if(context.index == context.slides.length) {
              context.direction = 'down';
              context.index-=2;
            }
            else if(context.index < 0) {
              context.direction = 'up';
              context.index+=2;
            }
  
            // get slide
            var slide = context.slides[context.index];
  
            if(slide) {
              context.carousel.scroll({
                behavior: 'smooth',
                left: slide.offsetLeft
              });
            }
            else {
              clearInterval(context.interval);
            }
  
          }, autoplay_time);
        }
  
        // setup events
        setupClearEvents() {
          var context = this;
  
          this.carousel.addEventListener('mousedown', (e) => {
            context.clearInterval();
          });
  
          this.carousel.addEventListener('touchstart', (e) => {
            context.clearInterval();
          });
        }
  
        // cancel the interval timer
        clearInterval() {
          if(this.interval) clearInterval(this.interval);
          this.section.removeAttribute('autoplaying');
        }
  
        // setup navigation links
        setupLinks() {
  
          var context = this;
  
          for(var x=0; x<this.links.length; x++) {
  
            // handle click of links
            this.links[x].addEventListener('click', (e) => {
  
                // clear interval
                context.clearInterval();
  
                var index = parseInt(e.target.getAttribute(`data-index`));
                var slide = null;
  
                for(x=0; x<context.slides.length; x++) {
                  var i = parseInt(context.slides[x].getAttribute('data-index')) || 0;
                  if(i==index) slide = context.slides[x];
                }
  
                if(slide) {
                  context.carousel.scroll({
                    behavior: 'smooth',
                    left: slide.offsetLeft
                  });
                }
  
                e.preventDefault();
            });
          }
  
        }
  
        // set active link
        setActiveLink(index) {
          for(var y=0; y<this.links.length; y++) this.links[y].removeAttribute('active');
  
          // set all active
          for(var y=0; y<this.links.length; y++) {
            if(this.links[y].hasAttribute('data-index')) {
              var i = parseInt(this.links[y].getAttribute('data-index'));
              if(i == index) this.links[y].setAttribute('active', '');
            }
          }
  
        }
  
        // setup observer
        setupObserver() {
  
          var context = this;
  
          // use intersection observer to render dots
          this.observer = new IntersectionObserver(function(entries, observer) {
  
            // Loop over the entries
            entries.forEach(entry => {
              // If the element is visible
              if (entry.isIntersecting) {
                var index = parseInt(entry.target.getAttribute('data-index')) || 0;
                context.setActiveLink(index);
              }
            });
  
          }, {
            root: context.carousel, threshold: 0.5
          });
  
          for (var i = 0; i < this.slides.length; i++) {
            this.observer.observe(this.slides[i]);
          }
  
        }
  
      }
      // end SpSlideShow class
  
      var section_{{ short_id }} = document.querySelector('#sp-mr-{{ section.id }}');
      var carousel_{{ short_id }} = document.querySelector(`#sp-mr-carousel-{{ section.id }}`);
      var slides_{{ short_id }} = section_{{ short_id }}.querySelectorAll('.sp-mr-col');
      var links_{{ short_id }} = section_{{ short_id }}.querySelectorAll('.sp-snap-links a');
      
      new SpSlideShow_{{ short_id }}(section_{{ short_id }}, carousel_{{ short_id }}, {{ section.settings.enable_autoplay }}, {{ section.settings.autoplay_time }}, slides_{{ short_id }}, links_{{ short_id }});
    
    }
  </script>
  {% endif %}

{% schema %}
  {
    "name": "ðSP - Media Review Grid",
    "settings": [
      {
        "type": "header",
        "content": "Font",
        "info": "Set the fonts for your section"
      },
      {
        "type": "checkbox",
        "id": "override_fonts",
        "label": "Override theme fonts",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "text_font",
        "label": "Text Font",
        "default": "sans-serif"
      },
      {
        "type": "font_picker",
        "id": "headline_font",
        "label": "Headline Font",
        "default": "sans-serif"
      },
      {
        "type": "header",
        "content": "Text",
        "info": "Set the text for your section"
      },
      {
        "type": "range",
        "id": "text_size",
        "min": 10,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Text Size",
        "default": 15
      },
      {
        "type": "select",
        "id": "text_line_height",
        "label": "Line Height",
        "options": [
          {
            "value": "0.75",
            "label": "0.75"
          },
          {
            "value": "1.0",
            "label": "1.0"
          },
          {
            "value": "1.1",
            "label": "1.1"
          },
          {
            "value": "1.2",
            "label": "1.2"
          },
          {
            "value": "1.3",
            "label": "1.3"
          },
          {
            "value": "1.4",
            "label": "1.4"
          },
          {
            "value": "1.5",
            "label": "1.5"
          },
          {
            "value": "1.6",
            "label": "1.6"
          },
          {
            "value": "1.7",
            "label": "1.7"
          },
          {
            "value": "1.8",
            "label": "1.8"
          },
          {
            "value": "1.9",
            "label": "1.9"
          },
          {
            "value": "2.0",
            "label": "2.0"
          },
          {
            "value": "inherit",
            "label": "Inherit"
          }
        ],
        "default": "1.2"
      },
      {
        "type": "color",
        "id": "text_color",
        "default": "#111",
        "label": "Text Color"
      },
      {
        "type": "range",
        "id": "headline_size",
        "min": 10,
        "max": 100,
        "step": 1,
        "unit": "px",
        "label": "Headline Size",
        "default": 15
      },
      {
        "type": "select",
        "id": "headline_line_height",
        "label": "Line Height",
        "options": [
          {
            "value": "0.75",
            "label": "0.75"
          },
          {
            "value": "1.0",
            "label": "1.0"
          },
          {
            "value": "1.1",
            "label": "1.1"
          },
          {
            "value": "1.2",
            "label": "1.2"
          },
          {
            "value": "1.3",
            "label": "1.3"
          },
          {
            "value": "1.4",
            "label": "1.4"
          },
          {
            "value": "1.5",
            "label": "1.5"
          },
          {
            "value": "1.6",
            "label": "1.6"
          },
          {
            "value": "1.7",
            "label": "1.7"
          },
          {
            "value": "1.8",
            "label": "1.8"
          },
          {
            "value": "1.9",
            "label": "1.9"
          },
          {
            "value": "2.0",
            "label": "2.0"
          },
          {
            "value": "inherit",
            "label": "Inherit"
          }
        ],
        "default": "1.2"
      },
      {
        "type": "color",
        "id": "headline_color",
        "default": "#111",
        "label": "Text Color"
      },
      {
        "type": "header",
        "content": "Colors",
        "info": "Set colors for the section."
      },
      {
        "type": "color_background",
        "id": "background_color",
        "default": "linear-gradient(164deg, #fff 0%, #fff 0%)",
        "label": "Background"
      },
      {
        "type": "color_background",
        "id": "review_background_color",
        "default": "linear-gradient(164deg, #fff 100%, #fff 100%)",
        "label": "Review Background"
      },
      {
        "type": "color",
        "id": "highlight_color",
        "default": "#111",
        "label": "Highlight Color"
      },
      {
        "type": "header",
        "content": "Button Style",
        "info": "Set the look and feel of the button"
      },
      {
        "type": "number",
        "id": "button_padding_tb",
        "default": 10,
        "label": "Padding Top/Bottom"
      },
      {
        "type": "number",
        "id": "button_padding_lr",
        "default": 25,
        "label": "Padding Left/Right"
      },
      {
        "type": "range",
        "id": "button_border_radius",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Round Borders on Button",
        "default": 5
      },
      {
        "type": "color_background",
        "id": "button_background_color",
        "default": "linear-gradient(164deg, #111 0%, #333 100%)",
        "label": "Button Background Color"
      },
      {
        "type": "color",
        "id": "button_text_color",
        "default": "#fff",
        "label": "Button Text Color"
      },
      {
        "type": "header",
        "content": "Dimensions",
        "info": "Set the section dimensions in pixels."
      },
      {
        "type": "select",
        "id": "media_aspect_ratio",
        "label": "Media Aspect Ratio",
        "options": [
          {
            "value": "21 / 9",
            "label": "21:9"
          },
          {
            "value": "16 / 9",
            "label": "16:9"
          },
          {
            "value": "4 / 3",
            "label": "4:3"
          },
          {
            "value": "1 / 1",
            "label": "1:1"
          }
        ],
        "default": "4 / 3"
      },
      {
        "type": "number",
        "id": "max_width",
        "default": 1000,
        "label": "Max Width of Section"
      },
      {
        "type": "number",
        "id": "grid_gap",
        "default": 20,
        "label": "Gap Between Reviews"
      },
      {
        "type": "number",
        "id": "padding_top",
        "default": 25,
        "label": "Padding Top"
      },
      {
        "type": "number",
        "id": "padding_bottom",
        "default": 25,
        "label": "Padding Bottom"
      },
      {
        "type": "number",
        "id": "padding_left",
        "default": 10,
        "label": "Padding Left"
      },
      {
        "type": "number",
        "id": "padding_right",
        "default": 10,
        "label": "Padding Right"
      },
      {
        "type": "header",
        "content": "Advanced",
        "info": "Set the advanced settings for the section"
      },
      {
        "type": "select",
        "id": "mobile_display",
        "label": "Mobile Display",
        "options": [
          {
            "value": "slideshow",
            "label": "Slideshow"
          },
          {
            "value": "stacked",
            "label": "Stacked"
          }
        ],
        "default": "slideshow"
      },
      {
        "type": "select",
        "id": "mobile_columns",
        "label": "Columns (when stacked)",
        "options": [
          {
            "value": "1fr",
            "label": "1 column"
          },
          {
            "value": "1fr 1fr",
            "label": "2 columns"
          },
          {
            "value": "1fr 1fr 1fr",
            "label": "3 columns"
          }
        ],
        "default": "1fr"
      },
      {
        "type": "color_background",
        "id": "progress_background_color",
        "default": "linear-gradient(177deg, rgba(17, 17, 17, .25) 3%, rgba(17, 17, 17, 0.25) 100%)",
        "label": "Slideshow Progress Background Color"
      },
      {
        "type": "color_background",
        "id": "progress_foreground_color",
        "default": "linear-gradient(177deg, rgba(17, 17, 17, 1) 3%, rgba(17, 17, 17, 1) 100%)",
        "label": "Slideshow Progress Foreground Color"
      },
      {
        "type": "color",
        "id": "indicator_color",
        "default": "#111",
        "label": "Slideshow Indicator Color"
      },
      {
        "type": "checkbox",
        "id": "enable_autoplay",
        "default": true,
        "label": "Enable Autoplay?"
      },
      {
        "type": "select",
        "id": "autoplay_time",
        "label": "Autoplay Time",
        "options": [
          {
            "value": "10000",
            "label": "Slowest (10s)"
          },
          {
            "value": "7500",
            "label": "Slower (7.5s)"
          },
          {
            "value": "5000",
            "label": "Normal (5s)"
          },
          {
            "value": "3000",
            "label": "Faster (3s)"
          },
          {
            "value": "2000",
            "label": "Fastest (2s)"
          }
        ],
        "default": "5000"
      },
      {
        "type": "checkbox",
        "id": "big_play_pause_button",
        "label": "Show Big Play Button",
        "default": true
      },
      {
        "type": "range",
        "id": "media_radius",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Round Borders on Media",
        "default": 5
      },
      {
        "type": "checkbox",
        "id": "media_shadow",
        "default": true,
        "label": "Subtle Shadow on Media"
      }
    ],
    
	"blocks": [
      {
       "name": "Image",
       "type": "image",
       "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "inline_richtext",
            "id": "quote",
            "label": "Quote",
            "default": "This is a sample review."
          },
          {
            "type": "inline_richtext",
            "id": "cite",
            "label": "Cite",
            "default": "<b>Sample Reviewer</b>"
          },
          {
            "type": "inline_richtext",
            "id": "cta",
            "label": "Call to Action"
          },
          {
            "type": "url",
            "id": "cta_link",
            "label": "Call to Action Link"
          }
       ]
      },
      {
       "name": "Video",
       "type": "video",
       "settings": [
          {
            "type": "video",
            "id": "video",
            "label": "Hero Video"
          },
          {
            "type": "url",
            "id": "link",
            "label": "Optional Link"
          },
          {
            "type": "checkbox",
            "id": "video_inline",
            "label": "Play Inline",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "video_autoplay",
            "label": "Autoplay",
            "default": false
          },
          {
            "type": "checkbox",
            "id": "video_loop",
            "label": "Loop Video",
            "default": false
          },
          {
            "type": "checkbox",
            "id": "video_controls",
            "label": "Show Video Controls",
            "default": false
          },
          {
            "type": "checkbox",
            "id": "video_muted",
            "label": "Mute Video",
            "default": false
          },
          {
            "type": "inline_richtext",
            "id": "quote",
            "label": "Quote",
            "default": "This is a sample review."
          },
          {
            "type": "inline_richtext",
            "id": "cite",
            "label": "Cite",
            "default": "<b>Sample Reviewer</b>"
          },
          {
            "type": "inline_richtext",
            "id": "cta",
            "label": "Call to Action"
          },
          {
            "type": "url",
            "id": "cta_link",
            "label": "Call to Action Link"
          }
       ]
      }
    ],
	"presets": [
      {
        "name": "ðSP - Media Review Grid",
        "blocks": [
          {
            "type": "image"
          },
          {
            "type": "image"
          },
          {
            "type": "image"
          }
        ]
      }
    ]
  }
{% endschema %}