{% schema %}
{
  "name": "➕ SA - Conversation Form",
  "settings": [
    {
      "type": "text",
      "id": "form_identifier",
      "label": "Form Identifier (Class or ID within Shadow DOM)",
      "default": "form",
      "info": "Provide the form's class or ID within the Shadow DOM. For example: form, #myForm, or .myFormClass"
    },
    {
      "type": "text",
      "id": "shadow_host_identifier",
      "label": "Shadow Host Identifier (Class or ID)",
      "default": "#app-embed",
      "info": "Provide the host element's class or ID that contains the Shadow DOM. For example: #app-embed or .embed-class"
    }
  ],
  "presets": [
    {
      "name": "➕ SA - Conversational Form",
      "category": "Form"
    }
  ]
}
{% endschema %}

<div class="sa-conversational-form"></div>

<script type="text/javascript" src="https://cdn.jsdelivr.net/gh/space10-community/conversational-form@1.0.1/dist/conversational-form.min.js" crossorigin></script>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    var shadowHostSelector = "{{ section.settings.shadow_host_identifier }}";
    var formSelector = "{{ section.settings.form_identifier }}";

    function initializeConversationalForm() {
      var shadowHostElement = document.querySelector(shadowHostSelector);

      if (shadowHostElement && shadowHostElement.shadowRoot) {
        var formElement = shadowHostElement.shadowRoot.querySelector(formSelector);

        if (formElement) {
          new cf.ConversationalForm({
            formEl: formElement
          });
        } else {
          console.error("Form element not found within the Shadow DOM with the identifier:", formSelector);
        }
      } else {
        console.error("Shadow host element not found or does not contain a shadow root:", shadowHostSelector);
      }
    }

    // Wait for the shadow DOM to be available
    var observer = new MutationObserver(function(mutations, obs) {
      var shadowHostElement = document.querySelector(shadowHostSelector);
      if (shadowHostElement && shadowHostElement.shadowRoot) {
        initializeConversationalForm();
        obs.disconnect(); // Stop observing once we find the shadow DOM
      }
    });

    observer.observe(document, {
      childList: true,
      subtree: true
    });
  });
</script>
